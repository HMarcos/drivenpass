// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  sessions      Session[]
  credentials   Credential[]
  secureNotes   SecureNote[]
  cards         Card[]
  wiFiPasswords WiFiPassword[]

  @@map("users")
}

model Session {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model Credential {
  id       Int    @id @default(autoincrement())
  title    String
  url      String
  username String
  password String
  userId   Int
  user     User   @relation(fields: [userId], references: [id])

  @@unique([title, userId])
  @@map("credentials")
}

model SecureNote {
  id     Int    @id @default(autoincrement())
  title  String @db.VarChar(50)
  note   String @db.VarChar(1000)
  userId Int
  user   User   @relation(fields: [userId], references: [id])

  @@unique([title, userId])
  @@map("secure_notes")
}

enum CardType {
  credito
  debito
  ambos
}

model Card {
  id             Int      @id @default(autoincrement())
  title          String
  number         String
  name           String
  securityCode   String   @db.VarChar(3)
  password       String
  expirationDate String   @db.VarChar(5)
  isVirtual      Boolean
  type           CardType
  userId         Int
  user           User     @relation(fields: [userId], references: [id])

  @@unique([title, userId])
  @@map("cards")
}

model WiFiPassword {
  id       Int    @id @default(autoincrement())
  title    String
  net      String
  password String
  userId   Int
  user     User   @relation(fields: [userId], references: [id])

  @@map("wi-fi-passwords")
}
